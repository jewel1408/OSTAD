class BankAccount {
    constructor() {
        this.accountNumber = "01817630762";
        this.ownerName = "Jewel Ahmed";
        this.balance = 3000; // Updated balance as a numeric value
    }

    displayAccountInfo() {
        return this.accountNumber;
    }

    deposit(amount) {
        if (amount > 0) {
            const previousBalance = this.balance;
            this.balance += amount;
            return `Deposit successful! into ${this.accountNumber}\nPrevious Balance: \u09F3 ${previousBalance}/=\nDeposit Amount: \u09F3 ${amount}/=\nNew Balance: \u09F3 ${this.balance}/=`;
        } else {
            return "Invalid deposit amount. Please provide a positive value.";
        }
    }

    withdraw(amount) {
        if (amount > 0) {
            const previousBalance = this.balance;
            if (amount <= this.balance) {
                this.balance -= amount;
                return `Withdraw successful! from ${this.accountNumber}\nPrevious Balance: \u09F3 ${previousBalance}/=\nWithdraw Amount: \u09F3 ${amount}/=\nNew Balance: \u09F3 ${this.balance}/=`;
            } else {
                return "Insufficient funds!\nCannot withdraw more than the current balance.";
            }
        } else {
            return "Invalid withdrawal amount. Please provide a positive value.";
        }
    }

    getBalance() {
        return (
            "Account Number: " + this.accountNumber +
            "\nOwner Name: " + this.ownerName +
            "\nClosing Balance: \u09F3 " + this.balance + "/="
        );
    }
}

let BankAccObj = new BankAccount();

// Initial Account Info
console.log("Initial Account Info:");
console.log("Account Number: " + BankAccObj.displayAccountInfo());
console.log("Owner Name: " + BankAccObj.ownerName);
console.log("Opening Balance: \u09F3 " + BankAccObj.balance + "/=");

// Deposit
console.log("\nDeposit and Withdrawal:");
console.log(BankAccObj.deposit(500));

// Withdraw
console.log(BankAccObj.withdraw(1200));

// Closing Account Info
console.log("\nUpdated Account Info:");
console.log(BankAccObj.getBalance());